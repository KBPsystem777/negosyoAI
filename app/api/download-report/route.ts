import { type NextRequest, NextResponse } from "next/server";

import { EMAIL_ADDRESS, PHONE_NUMBER } from "@/constants";

export async function POST(request: NextRequest) {
  try {
    const { businessPlan, reportType } = await request.json();

    // Generate different report content based on reportType
    let reportContent = "";
    let fileName = "";

    switch (reportType) {
      case "business-plan":
        fileName = "Business-Plan";
        reportContent = generateBusinessPlanReport(businessPlan);
        break;
      case "marketing-plan":
        fileName = "Marketing-Plan";
        reportContent = generateMarketingPlanReport(businessPlan);
        break;
      case "financial-report":
        fileName = "Financial-Report";
        reportContent = generateFinancialReport(businessPlan);
        break;
      case "manpower-report":
        fileName = "Manpower-Report";
        reportContent = generateManpowerReport(businessPlan);
        break;
      default:
        throw new Error("Invalid report type");
    }

    // Create a simple text-based report (in a real app, you'd use a PDF library)
    const reportBlob = new Blob([reportContent], { type: "text/plain" });

    return new NextResponse(reportBlob, {
      headers: {
        "Content-Type": "application/octet-stream",
        "Content-Disposition": `attachment; filename="${fileName}.pdf"`,
      },
    });
  } catch (error) {
    console.error("Error generating report:", error);
    return NextResponse.json(
      { error: "Failed to generate report" },
      { status: 500 }
    );
  }
}

function generateBusinessPlanReport(businessPlan: any): string {
  return `
COMPREHENSIVE BUSINESS PLAN
===========================
Generated by negosyo.ai - Built by BPxAI

Business Name: ${businessPlan.selectedBusinessName}
Tagline: ${businessPlan.tagline}

EXECUTIVE SUMMARY
-----------------
${businessPlan.description}

SUGGESTED BUSINESS NAMES
------------------------
${businessPlan.suggestedNames
  .map((name: string, index: number) => `${index + 1}. ${name}`)
  .join("\n")}

MARKET RESEARCH
---------------
Market Size: ${businessPlan.marketResearch.marketSize}

Target Markets:
${businessPlan.marketResearch.targetMarket
  .map((market: string) => `• ${market}`)
  .join("\n")}

Market Trends:
${businessPlan.marketResearch.marketTrends
  .map((trend: string) => `• ${trend}`)
  .join("\n")}

Market Opportunities:
${businessPlan.marketResearch.opportunities
  .map((opp: string) => `• ${opp}`)
  .join("\n")}

COMPETITOR ANALYSIS
-------------------
${businessPlan.competitorAnalysis.directCompetitors
  .map(
    (comp: any) => `
${comp.name}
Strengths: ${comp.strengths.join(", ")}
Weaknesses: ${comp.weaknesses.join(", ")}
Pricing: ${comp.pricing}
`
  )
  .join("\n")}

Competitive Advantages:
${businessPlan.competitorAnalysis.competitiveAdvantages
  .map((adv: string) => `• ${adv}`)
  .join("\n")}

Market Positioning: ${businessPlan.competitorAnalysis.marketPositioning}

DAILY OPERATIONS
----------------
${businessPlan.dailyOperations
  .map((op: string, index: number) => `${index + 1}. ${op}`)
  .join("\n")}

FINANCIAL PROJECTIONS
---------------------
Startup Costs:
${businessPlan.financialProjections.startupCosts
  .map((cost: any) => `• ${cost.item}: ₱${cost.cost.toLocaleString()}`)
  .join("\n")}

Monthly Expenses:
${businessPlan.financialProjections.monthlyExpenses
  .map((exp: any) => `• ${exp.item}: ₱${exp.cost.toLocaleString()}`)
  .join("\n")}

Break-even Analysis:
• Break-even Month: ${
    businessPlan.financialProjections.breakEvenAnalysis.breakEvenMonth
  }
• Break-even Revenue: ₱${businessPlan.financialProjections.breakEvenAnalysis.breakEvenRevenue.toLocaleString()}
• Expected ROI: ${businessPlan.financialProjections.breakEvenAnalysis.roi}%

EDUCATIONAL RESOURCES
---------------------
Business Tips:
${businessPlan.educationalResources.businessTips
  .map((tip: string) => `• ${tip}`)
  .join("\n")}

Government Programs:
${businessPlan.educationalResources.governmentPrograms
  .map((program: string) => `• ${program}`)
  .join("\n")}

Funding Sources:
${businessPlan.educationalResources.fundingSources
  .map((source: string) => `• ${source}`)
  .join("\n")}

---
Generated by negosyo.ai
Built by BPxAI - Business Planning x Artificial Intelligence
Empowering Filipino Entrepreneurs with AI
Contact: ${EMAIL_ADDRESS} | ${PHONE_NUMBER}
`;
}

function generateMarketingPlanReport(businessPlan: any): string {
  return `
COMPREHENSIVE MARKETING PLAN
============================
Generated by negosyo.ai - Built by BPxAI

Business: ${businessPlan.selectedBusinessName}
Tagline: ${businessPlan.tagline}

BRANDING STRATEGY
-----------------
${businessPlan.marketingPlan.brandingStrategy
  .map((strategy: string) => `• ${strategy}`)
  .join("\n")}

DIGITAL MARKETING
-----------------
${businessPlan.marketingPlan.digitalMarketing
  .map((strategy: string) => `• ${strategy}`)
  .join("\n")}

TRADITIONAL MARKETING
---------------------
${businessPlan.marketingPlan.traditionalMarketing
  .map((strategy: string) => `• ${strategy}`)
  .join("\n")}

SOCIAL MEDIA STRATEGY
---------------------
${businessPlan.marketingPlan.socialMediaStrategy
  .map((strategy: string) => `• ${strategy}`)
  .join("\n")}

CONTENT IDEAS (TAGLISH)
-----------------------
${businessPlan.marketingPlan.contentIdeas
  .map((idea: string) => `• ${idea}`)
  .join("\n")}

CUSTOMER ACQUISITION
--------------------
Target Customer Segments:
${businessPlan.customerAcquisition.targetCustomers
  .map(
    (customer: any) => `
${customer.segment}
Demographics: ${customer.demographics}
Needs: ${customer.needs.join(", ")}
Acquisition Strategy: ${customer.acquisitionStrategy.join(", ")}
`
  )
  .join("\n")}

Sales Funnel:
${businessPlan.customerAcquisition.salesFunnel
  .map((step: string, index: number) => `${index + 1}. ${step}`)
  .join("\n")}

Customer Retention Strategies:
${businessPlan.customerAcquisition.retentionStrategies
  .map((strategy: string) => `• ${strategy}`)
  .join("\n")}

---
Generated by negosyo.ai
Built by BPxAI - Business Planning x Artificial Intelligence
Empowering Filipino Entrepreneurs with AI
Contact: ${EMAIL_ADDRESS} | ${PHONE_NUMBER}
`;
}

function generateFinancialReport(businessPlan: any): string {
  return `
FINANCIAL PROJECTIONS REPORT
=============================
Generated by negosyo.ai - Built by BPxAI

Business: ${businessPlan.selectedBusinessName}

STARTUP COSTS BREAKDOWN
-----------------------
${businessPlan.financialProjections.startupCosts
  .map(
    (cost: any) =>
      `${cost.item} (${cost.category}): ₱${cost.cost.toLocaleString()}`
  )
  .join("\n")}

Total Startup Cost: ₱${businessPlan.financialProjections.startupCosts
    .reduce((sum: number, cost: any) => sum + cost.cost, 0)
    .toLocaleString()}

MONTHLY EXPENSES BREAKDOWN
--------------------------
${businessPlan.financialProjections.monthlyExpenses
  .map(
    (exp: any) => `${exp.item} (${exp.category}): ₱${exp.cost.toLocaleString()}`
  )
  .join("\n")}

Total Monthly Expenses: ₱${businessPlan.financialProjections.monthlyExpenses
    .reduce((sum: number, exp: any) => sum + exp.cost, 0)
    .toLocaleString()}

12-MONTH REVENUE PROJECTIONS
----------------------------
${businessPlan.financialProjections.revenueProjections
  .map(
    (proj: any) =>
      `Month ${
        proj.month
      }: Revenue ₱${proj.revenue.toLocaleString()} | Expenses ₱${proj.expenses.toLocaleString()} | Profit ₱${proj.profit.toLocaleString()}`
  )
  .join("\n")}

BREAK-EVEN ANALYSIS
-------------------
Break-even Month: ${
    businessPlan.financialProjections.breakEvenAnalysis.breakEvenMonth
  }
Break-even Revenue Required: ₱${businessPlan.financialProjections.breakEvenAnalysis.breakEvenRevenue.toLocaleString()}
Expected ROI: ${businessPlan.financialProjections.breakEvenAnalysis.roi}%

---
Generated by negosyo.ai
Built by BPxAI - Business Planning x Artificial Intelligence
Empowering Filipino Entrepreneurs with AI
Contact: ${EMAIL_ADDRESS} | ${PHONE_NUMBER}
`;
}

function generateManpowerReport(businessPlan: any): string {
  return `
MANPOWER PLANNING REPORT
========================
Generated by negosyo.ai - Built by BPxAI

Business: ${businessPlan.selectedBusinessName}

STAFFING PLAN
-------------
${businessPlan.manpowerPlan.roles
  .map(
    (role: any) => `
Position: ${role.position}
Monthly Salary: ₱${role.salary.toLocaleString()}
Hiring Timeline: ${role.when}

Key Responsibilities:
${role.responsibilities.map((resp: string) => `• ${resp}`).join("\n")}
`
  )
  .join("\n")}

TOTAL MONTHLY SALARY COSTS
--------------------------
Total Monthly Salaries: ₱${businessPlan.manpowerPlan.totalMonthlySalaries.toLocaleString()}

HIRING TIMELINE
---------------
${businessPlan.manpowerPlan.roles
  .map(
    (role: any) =>
      `${role.when}: Hire ${
        role.position
      } (₱${role.salary.toLocaleString()}/month)`
  )
  .join("\n")}

---
Generated by negosyo.ai
Built by BPxAI - Business Planning x Artificial Intelligence
Empowering Filipino Entrepreneurs with AI
Contact: ${EMAIL_ADDRESS} | ${PHONE_NUMBER}
`;
}
